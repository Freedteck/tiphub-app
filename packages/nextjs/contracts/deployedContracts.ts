/**
 * This file is autogenerated by Scaffold-ETH.
 * You should not edit it manually or your changes might be overwritten.
 */
import { GenericContractsDeclaration } from "~~/utils/scaffold-eth/contract";

const deployedContracts = {
  11155111: {
    TipHub: {
      address: "0x12dB87BFB2c620Bd60f1364cDd8AC16cB0270Da7",
      abi: [
        {
          inputs: [
            {
              internalType: "address",
              name: "_usdeTokenAddress",
              type: "address",
            },
          ],
          stateMutability: "nonpayable",
          type: "constructor",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "uint256",
              name: "resourceId",
              type: "uint256",
            },
            {
              indexed: true,
              internalType: "address",
              name: "contributor",
              type: "address",
            },
            {
              indexed: false,
              internalType: "string",
              name: "contentHash",
              type: "string",
            },
          ],
          name: "ResourceShared",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "uint256",
              name: "resourceId",
              type: "uint256",
            },
            {
              indexed: true,
              internalType: "address",
              name: "tipper",
              type: "address",
            },
            {
              indexed: true,
              internalType: "address",
              name: "contributor",
              type: "address",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "tipAmount",
              type: "uint256",
            },
          ],
          name: "ResourceTipped",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "uint256",
              name: "resourceId",
              type: "uint256",
            },
            {
              indexed: true,
              internalType: "address",
              name: "viewer",
              type: "address",
            },
          ],
          name: "ResourceViewed",
          type: "event",
        },
        {
          inputs: [],
          name: "MIN_TIP_AMOUNT",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "USDE_PURCHASE_LINK",
          outputs: [
            {
              internalType: "string",
              name: "",
              type: "string",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint8",
              name: "_limit",
              type: "uint8",
            },
          ],
          name: "getTopContributors",
          outputs: [
            {
              internalType: "address[]",
              name: "contributors",
              type: "address[]",
            },
            {
              internalType: "uint256[]",
              name: "tips",
              type: "uint256[]",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "getTotalResources",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "getUSDePurchaseLink",
          outputs: [
            {
              internalType: "string",
              name: "",
              type: "string",
            },
          ],
          stateMutability: "pure",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_user",
              type: "address",
            },
          ],
          name: "getUserResources",
          outputs: [
            {
              internalType: "uint256[]",
              name: "",
              type: "uint256[]",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          name: "resources",
          outputs: [
            {
              internalType: "address",
              name: "contributor",
              type: "address",
            },
            {
              internalType: "string",
              name: "contentHash",
              type: "string",
            },
            {
              internalType: "uint256",
              name: "tipsReceived",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "createdAt",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "viewCount",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "string",
              name: "_contentHash",
              type: "string",
            },
          ],
          name: "shareResource",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "_resourceId",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "_amount",
              type: "uint256",
            },
          ],
          name: "tipResource",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          name: "totalTipsReceived",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "usdeToken",
          outputs: [
            {
              internalType: "contract IERC20",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          name: "userResources",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "_resourceId",
              type: "uint256",
            },
          ],
          name: "viewResource",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
      ],
      inheritedFunctions: {},
    },
  },
} as const;

export default deployedContracts satisfies GenericContractsDeclaration;
